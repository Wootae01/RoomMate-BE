services:

  db: # 서비스 이름 (compose 내부 식별자)
    image: mysql:8.0
    container_name: db-roommate
    environment:
      MYSQL_DATABASE: roommate
      MYSQL_USER: roommate_user
      MYSQL_PASSWORD: roommate1234
      MYSQL_ROOT_PASSWORD: roommate1234
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - monitoring
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "roommate_user", "--password=roommate1234" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s  # 컨테이너 시작 후 30초 동안은 실패를 무시
    deploy:
      resources:
        limits:
          cpus: "2"  # 최대 2개의 코어 할당
          memory: 2GB   # 최대 2GB 메모리 할당

  app:
    build: .
    container_name: spring-app-roommate
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/roommate?allowPublicKeyRetrieval=true&useSSL=false&rewriteBatchedStatements=true
      JAVA_OPTS: "-Xms256m -Xmx512m"  # JVM 힙 메모리 제한
    deploy:
      resources:
        limits:
          cpus: '2'    # CPU 2코어로 제한
          memory: 1G   # 전체 메모리 1GB로 제한
        reservations:
          cpus: '0.5'
          memory: 512M
    depends_on:
      db:
        condition: service_healthy  # MySQL의 health check가 성공할 때까지 대기
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus          #docker hub 에 있는 이미지 이름
    container_name: prometheus-roommate
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml/:/etc/prometheus/prometheus.yml    #현재 디렉토리의 prometheus.yml 파일을 컨테이너 내의 경로에 마운트
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5' #cpu 0.5개 사용

  grafana:
    image: grafana/grafana
    container_name: grafana-roommate
    ports:
      - '3001:3000'

    volumes:
      - grafana_data:/var/lib/grafana

    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

    networks:
      monitoring:
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

# volume 은 Docker 컨테이너의 데이터를 컨테이너 바깥에 안전하게 저장하는 공간
# 컨테이너는 기본적으로 휘발성. 데이터 유지하기 위해서는 외부에 저장.
volumes:
  mysql_data:
  grafana_data:

networks:
  monitoring:
